esphome:
  name: $device_name
  includes:
    - ../my_components/Segmented_E_paper1.h

external_components:
  # use all components from a local folder
  - source:
      type: local
      path: ../my_components

esp32:
  board: esp32-c3-devkitm-1
  # board: esp32dev
  # board: esp32-c6-devkitc-1
  variant: esp32c6
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_FREERTOS_UNICORE: y
    advanced:
      ignore_efuse_mac_crc: true
  # board: esp32-c6-devkitc-1
  # variant: esp32c6
  # framework:
  #   type: esp-idf
    # version: 5.1.0
    # platform_version: https://github.com/stintel/platform-espressif32#esp32-c6-test
# esp32:
#   board: esp32dev
#   framework:
#     type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: "MuskFi"
  password: "123456789"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$device_name AP"
    password: "BiSG9yrKP394"

captive_portal:

i2c:
  - id: bus_a
    sda: $sda_pin
    scl: $scl_pin
    scan: true

# custom_component:
#   - lambda: |-
#       auto ePaper_display = new SegmentedEPaper(id(bus_a));
#       //ePaper_display->SetPins($disp_rst_pin, $disp_busy_pin);
#       return {ePaper_display};
#     components:
#       - id: segmented_e_paper

segmented_epaper:
  - id: segmented_e_paper
    reset_pin: $disp_rst_pin
    busy_pin: $disp_busy_pin
    i2c_id: bus_a

time:
  - platform: sntp
    on_time:
      # Every 30s
      - seconds: 0,15,30,45
        then:
          - lambda: |-
              auto ptr = id(segmented_e_paper);
              auto tempVal = id(temp).state;
              ptr->SetUpperDisplayFloat( ((tempVal) * (9.0/5.0)) + 32 );
              auto setpoint = id(therm).target_temperature;
              ptr->SetLowerDisplayInt( ((setpoint) * (9.0/5.0)) + 32 );

sensor:
  - platform: sht4x
    update_interval: 30s
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temp
      unit_of_measurement: "°C"
    humidity:
      name: "Relative Humidity"
      id: humid

  - platform: rotary_encoder
    id: dial
    pin_a:
      number: $encode_pin_1
      mode: INPUT
    pin_b:
      number: $encode_pin_2
      mode: INPUT # _PULLUP external pull up resistor required
    on_anticlockwise:
      - lambda: auto newTemp = id(therm).target_temperature + (5.0/9.0);
          ESP_LOGD("ccw", "old, %f,  new; %f", id(therm).target_temperature, newTemp);
          auto ptr = id(segmented_e_paper);
          ptr->SetLowerDisplayInt( ((newTemp) * (9.0/5.0)) + 32 );
          auto call = id(therm).make_call();
          call.set_target_temperature(newTemp);
          call.perform();
    on_clockwise:
      - lambda: auto newTemp = id(therm).target_temperature - (5.0/9.0);
          ESP_LOGD("ccw", "old, %f,  new; %f", id(therm).target_temperature, newTemp);
          auto ptr = id(segmented_e_paper);
          ptr->SetLowerDisplayInt( ((newTemp) * (9.0/5.0)) + 32 );
          auto call = id(therm).make_call();
          call.set_target_temperature(newTemp);
          call.perform();

switch:
  #heater
  - platform: gpio
    pin: $relay_pin
    id: heaterLow
    restore_mode: always_off
  - platform: gpio
    pin: $relay_pin2
    id: heaterHigh
    restore_mode: always_off

climate:
  - platform: thermostat
    name: $thermostat_name
    sensor: temp
    id: therm
    default_preset: home
    supplemental_heating_delta: 3 °C
    startup_delay: True
    min_heating_off_time: 30s
    min_heating_run_time: 30s
    max_heating_run_time: 180s
    min_idle_time: 30s
    heat_action:
      - switch.turn_on: heaterLow
    supplemental_heating_action:
      - switch.turn_on: heaterHigh
    idle_action:
      - switch.turn_off: heaterLow
      - switch.turn_off: heaterHigh
    preset:
      - name: home
        default_target_temperature_low: 19 °C
        mode: heat
      - name: away
        default_target_temperature_low: 10 °C
        mode: heat
      - name: sleep
        default_target_temperature_low: 18 °C
        mode: heat
