esphome:
  name: $device_name
  platformio_options:
    board_build.flash_mode: dio

external_components:
  - source:
      type: local
      path: ../my_components # path relative to Devices folder

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: y

logger:
  level: VERBOSE
  logs:
    climate: INFO
    sensor: INFO
    esp32.preferences: INFO

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: "MuskFi"
  password: "123456789"
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$device_name AP"
    password: "BiSG9yrKP394"
captive_portal:

button:
  - platform: restart
    name: "$thermostat_name Restart"

text_sensor:
  - platform: version
    name: "$thermostat_name Version"

i2c:
  - id: bus_a
    sda: $sda_pin
    scl: $scl_pin
    scan: true

segmented_epaper:
  - id: segmented_e_paper
    reset_pin: $disp_rst_pin
    busy_pin: $disp_busy_pin
    i2c_id: bus_a

time:
  - platform: homeassistant
    on_time:
      # 2 am every day perform a full refresh, as per manufacturer recommendation
      - seconds: 0
        minutes: 0
        hours: 2
        then:
          - lambda: |-
              auto ptr = id(segmented_e_paper);
              ptr->Init_Display();
              ptr->FullRefreshScreen(true);
              ptr->FlushToScreen();
      # Every 15s
      - seconds: 0,15,30,45
        then:
          - lambda: |-
              auto ptr = id(segmented_e_paper);
              auto tempVal = id(temp).state;
              ptr->SetUpperDisplayFloat( ((tempVal) * (9.0/5.0)) + 32, false);
              auto setpoint = id(therm).target_temperature;
              ptr->SetLowerDisplayInt( ((setpoint) * (9.0/5.0)) + 32, true );

sensor:
  - platform: sht4x
    update_interval: 30s
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temp
      unit_of_measurement: "°C"
    humidity:
      name: "Relative Humidity"
      id: humid

  - platform: rotary_encoder
    id: dial
    pin_a:
      number: $encode_pin_1
      mode: INPUT
    pin_b:
      number: $encode_pin_2
      mode: INPUT # _PULLUP external pull up resistor required
    on_anticlockwise:
      - lambda: |-
          auto newTemp = id(therm).target_temperature + (5.0/9.0);
          ESP_LOGD("ccw", "old, %f,  new; %f", id(therm).target_temperature, newTemp);
          auto ptr = id(segmented_e_paper);
          ptr->SetLowerDisplayInt( ((newTemp) * (9.0/5.0)) + 32, true );
          auto call = id(therm).make_call();
          call.set_target_temperature(newTemp);
          call.perform();
    on_clockwise:
      - lambda: |-
          auto newTemp = id(therm).target_temperature - (5.0/9.0);
          ESP_LOGD("ccw", "old, %f,  new; %f", id(therm).target_temperature, newTemp);
          auto ptr = id(segmented_e_paper);
          ptr->SetLowerDisplayInt( ((newTemp) * (9.0/5.0)) + 32, true );
          auto call = id(therm).make_call();
          call.set_target_temperature(newTemp);
          call.perform();

climate:
  - platform: thermostat
    name: $thermostat_name
    sensor: temp
    id: therm
    default_preset: home
    startup_delay: True
    min_heating_off_time: 15min
    min_heating_run_time: 15min
    # max_heating_run_time: 45m
    min_cooling_off_time: 15min
    min_cooling_run_time: 15min
    min_idle_time: 30s
    heat_action:
      - delay: 0ms
    cool_action:
      - delay: 0ms
    idle_action:
      - delay: 0ms
    preset:
      - name: home
        default_target_temperature_low: 19 °C
        default_target_temperature_high: 24 °C
        mode: heat
      - name: away
        default_target_temperature_low: 10 °C
        default_target_temperature_high: 30 °C
        mode: heat
      - name: sleep
        default_target_temperature_low: 18 °C
        default_target_temperature_high: 23 °C
        mode: heat
