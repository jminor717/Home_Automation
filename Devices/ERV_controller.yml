substitutions:
  device_name: erv-controller
  scl: GPIO4
  sda: GPIO5
  scl2: GPIO15
  sda2: GPIO16
  bathroom_switch: GPIO6
  oven_switch: GPIO7
  shop_switch: GPIO8
  erv_speed: GPIO9
  erv_in_l_pin: GPIO11
  erv_in_h_pin: GPIO12
  erv_out_l_pin: GPIO13
  erv_out_h_pin: GPIO14


esphome:
  name: $device_name
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    then:
      - output.set_level:
          id: erv_in_h
          level: 80%
      - output.set_level:
          id: erv_in_l
          level: 60%
      - output.set_level:
          id: erv_out_h
          level: 70%
      - output.set_level:
          id: erv_out_l
          level: 50%

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: y


preferences:
  # the default of 1min is far too short--flash chip is rated
  # for approx 100k writes.
  flash_write_interval: "48h"

api:
ota:
#   platform: esphome
  password: ""

logger:
  level: INFO
  # logs:
  #   wifi: INFO
  #   captive_portal: INFO
  #   button: INFO
  #   time: INFO

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "$device_name AP"
    password: "BiSG9yrKP394"
captive_portal:

time:
  - platform: homeassistant

button:
  - platform: restart
    name: "$device_name Restart"
  - platform: template
    name: "PID Autotune"
    on_press:
      - climate.pid.autotune: pid_pressure

text_sensor:
  - platform: version
    name: "$device_name Version"

i2c:
  - id: bus_a
    sda: $sda
    scl: $scl
    scan: true
  - id: bus_b
    sda: $sda2
    scl: $scl2
    scan: true

climate:
  - platform: pid
    id: pid_pressure
    name: "PID Climate Controller"
    sensor: house_pressure_template
    default_target_temperature: 50
    heat_output: pid_out
    control_parameters:
      kp: 0.0
      ki: 0.0
      kd: 0.0

tca9548a:
  - address: 0x70
    id: multiplex0
    i2c_id: bus_a
    channels:
      - bus_id: mux0_c0
        channel: 0
      - bus_id: mux0_c1
        channel: 1
      - bus_id: mux0_c2
        channel: 2
      - bus_id: mux0_c3
        channel: 3
      - bus_id: mux0_c4
        channel: 4
      - bus_id: mux0_c5
        channel: 5

binary_sensor:
  - platform: gpio
    pin:
      number: $bathroom_switch
      mode:
        input: true
        pulldown: true
    name: "Bathroom Exaust Switch"
    filters:
      - delayed_on_off: 2s
    on_press:
    # - lambda: |-
    #     auto call = id(pid_pressure).make_call();
    #     call.set_target_temperature(80);
    #     call.perform();
      then:
        - switch.turn_on: erv_high_speed
    on_release:
      then:
        - switch.turn_off: erv_high_speed
  - platform: gpio
    pin:
      number: $oven_switch
      mode:
        input: true
        pulldown: true
    name: "Kitchen Exaust Switch"
    filters:
      - delayed_on_off: 2s
  - platform: gpio
    pin:
      number: $shop_switch
      mode:
        input: true
        pulldown: true
    name: "Shop Exaust Switch"
    filters:
      - delayed_on_off: 2s

sensor:
  - platform: sht4x
    update_interval: 30s
    i2c_id: mux0_c0
    temperature:
      name: "ERV Intake Temperature"
      id: erv_in_temp
      unit_of_measurement: "°C"
    humidity:
      name: "ERV Intake Humidity"
      id: erv_in_humid
  - platform: sht4x
    update_interval: 30s
    i2c_id: mux0_c1
    temperature:
      name: "ERV Exaust Temperature"
      id: erv_ex_temp
      unit_of_measurement: "°C"
    humidity:
      name: "ERV Exaust Humidity"
      id: erv_ex_humid
  - platform: sht4x
    update_interval: 30s
    i2c_id: mux0_c2
    temperature:
      name: "ERV Supply Temperature"
      id: erv_sup_temp
      unit_of_measurement: "°C"
    humidity:
      name: "ERV Supply Humidity"
      id: erv_sup_humid
  - platform: sdp3x
    update_interval: 30s
    name: "ERV Input Pressure drop"
    id: erv_input_pressure
    i2c_id: mux0_c3
  - platform: sdp3x
    update_interval: 30s
    name: "ERV Output Pressure drop"
    id: erv_output_pressure
    i2c_id: mux0_c4
  - platform: sdp3x
    update_interval: 1s
    name: "Indoor Pressure"
    id: house_pressure
    i2c_id: bus_b
    filters:
      # we capture a new sample every 1 seconds, so the time can
      # be calculated from the number of samples as n * 1.
      sliding_window_moving_average:
        # we average over the past 10 seconds
        window_size: 10
        # we push a new value every 5 seconds
        send_every: 5
  - platform: template
    name: "Indoor Pressure Template Sensor"
    id: house_pressure_template
    lambda: |-
      return id(house_pressure).state;
    update_interval: 5s



switch:
  - platform: gpio
    pin: $erv_speed
    name: "ERV High Speed"
    id: erv_high_speed

output:
  - platform: ledc
    pin: $erv_in_l_pin
    id: erv_in_l
    frequency: 19531Hz
  - platform: ledc
    pin: $erv_in_h_pin
    id: erv_in_h
    frequency: 19531Hz
  - platform: ledc
    pin: $erv_out_l_pin
    id: erv_out_l
    frequency: 19531Hz
  - platform: ledc
    pin: $erv_out_h_pin
    id: erv_out_h
    frequency: 19531Hz
  # - platform: template
  #   id: pid_out
  #   type: float
  #   write_action:
  #     - if:
  #         condition:
  #           lambda: return id(erv_high_speed).state;
  #         then:
  #           - output.set_level:
  #               id: erv_in_h
  #               level: !lambda return state;
  #         else:
  #           - output.set_level:
  #               id: erv_in_l
  #               level: !lambda return state;
  - platform: ledc
    pin: GPIO10
    id: pid_out
    frequency: 19531Hz
#   - platform: mcp4728
#     id: erv_in_h
#     mcp4728_id: dac_output
#     min_power: 0.2
#     max_power: 0.9
#     channel: A
#     vref: internal
#     gain: X1
#     power_down: gnd_1k
#   - platform: mcp4728
#     id: erv_in_l
#     mcp4728_id: dac_output
#     channel: B
#     vref: internal
#     gain: X1
#     power_down: gnd_1k
#   - platform: mcp4728
#     id: erv_out_h
#     mcp4728_id: dac_output
#     channel: C
#     vref: internal
#     gain: X1
#     power_down: gnd_1k
#   - platform: mcp4728
#     id: erv_out_l
#     mcp4728_id: dac_output
#     channel: D
#     vref: internal
#     gain: X1
#     power_down: gnd_1k

# mcp4728:
#   - id: dac_output
#     i2c_id: bus_a



light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: GPIO48
    num_leds: 1
    rmt_channel: 0
    chipset: ws2812
    name: "$device_name Light"





















