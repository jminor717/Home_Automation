substitutions:
  device_name: xiao-thermostat
  thermostat_name: "Xiao Thermostat"
  sda_pin: GPIO21
  scl_pin: GPIO22
  encode_pin_1: GPIO23
  encode_pin_2: GPIO16
  # encode_sw_pin: GPIO14
  relay_pin: GPIO17
  # relay_pin2: GPIO19
  disp_rst_pin: GPIO18
  disp_busy_pin: GPIO19

# LED: 15
# RF: 14   High: external, Low: built in
# STRAPPING:  8:F, 9:PU, 15:F
# D    -> GPIO
# 0    -> 0
# 1    -> 1
# 2    -> 2
# 3    -> 21
# 4    -> 22
# 5    -> 23
# 6    -> 16
# 7    -> 17
# 8    -> 19
# 9    -> 20
# 10   -> 18
# UNDER BOARD: 4, 5, 6, 7

esphome:
  name: $device_name

external_components:
  - source:
      type: local
      path: ../my_components # path relative to Devices folder

esp32:
  board: esp32-c6-devkitc-1
  flash_size: 8MB
  variant: esp32c6
  framework:
    platform_version: 6.6.0
    type: esp-idf
    version: 5.2.1
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y
    # type: arduino
    # version: "2.0.17"

# logger:
#   level: DEBUG
#   logs:
#     climate: INFO
#     sensor: INFO
#     esp32.preferences: INFO


api:
  password: ""

ota:
  password: ""

wifi:
  ssid: "MuskFi"
  password: "123456789"
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$device_name AP"
    password: "BiSG9yrKP394"
captive_portal:

switch:
  #heater
  - platform: gpio
    pin: $relay_pin
    id: heaterLow
    restore_mode: always_off


time:
  - platform: sntp
    on_time:
      # 2 am every day perform a full refresh, as per manufacturer recommendation
      - seconds: 0
        minutes: 0
        hours: 2
        then:
          - switch.turn_on: heaterLow
          # - lambda: |-
          #     auto ptr = id(segmented_e_paper);
          #     ptr->Init_Display();
          #     ptr->FullRefreshScreen(true);
          #     ptr->FlushToScreen();
      # Every 15s
      # - seconds: 0,15,30,45
      #   then:
      #     - lambda: |-
      #         auto ptr = id(segmented_e_paper);
      #         auto tempVal = id(temp).state;
      #         ptr->SetUpperDisplayFloat( ((tempVal) * (9.0/5.0)) + 32, false);
      #         auto setpoint = id(therm).target_temperature;
      #         ptr->SetLowerDisplayInt( ((setpoint) * (9.0/5.0)) + 32, true );