esphome:
  name: vent-tester

external_components:
  # use all components from a local folder
  - source:
      type: local
      path: my_components # path relative to Devices folder

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG
  logs:
    cover: INFO
    sensor: INFO
    esp32.preferences: INFO


# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: "MuskFi"
  password: "123456789"
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "e-paper-tester AP"
    password: "BiSG9yrKP394"
captive_portal:




cover:
  - platform: template
    device_class: damper
    id: vent
    name: Test Vent
    has_position: true
    open_action:
      - lambda: 'ESP_LOGD("damper", "Open Requested");'
    close_action:
      - lambda: 'ESP_LOGD("damper", "Closed Requested");'
    stop_action:
      - lambda: 'ESP_LOGD("damper", "Stop Requested");'
    position_action:
      - lambda: 'ESP_LOGD("damper", "position Requested: %f", pos); '
    # position:
    #  - lambda: 'return id(vent_servo_potentiometer).state'

time:
  - platform: sntp
    on_time:
      # Every 15s
      - seconds: 0,15,30,45
        then:
          - cover.template.publish:
              id: vent
              position:  !lambda  'return id(vent_servo_potentiometer).state;'
    # lambda: 'return id(closed_limit_switch).state ? COVER_CLOSED : COVER_OPEN;'

# cover:
#   - platform: feedback
#     device_class: damper
#     name: "Test Vent"

#     open_action:
#       - lambda: 'ESP_LOGD("damper", "Open Requested");'
#     open_duration: 10s
#     # open_endstop: open_limit_switch

#     close_action:
#       - lambda: 'ESP_LOGD("damper", "Closed Requested");'
#     close_duration: 10s
#     # close_endstop: closed_limit_switch

#     stop_action:
#       - lambda: 'ESP_LOGD("damper", "Stop Requested");'

binary_sensor:
  - platform: gpio
    pin: GPIO5
    id: closed_limit_switch
  - platform: gpio
    pin: GPIO5
    id: open_limit_switch

sensor:
  - platform: adc
    id: vent_servo_potentiometer
    pin: GPIO32
    update_interval: 250ms

servo:
  - id: vent_servo
    output: vent_servo_output
    transition_length: 7s
    auto_detach_time: 200ms
    
output:
  - platform: ledc
    id: vent_servo_output
    pin: GPIO1
    frequency: 50 Hz